<?xml version="1.0" encoding="UTF-8"?>
<!-- 
# xml의 dtd 선언 부분
1. dtd : 상단의 어떤 태그를 사용할지를 선언하는 부분,
2. dtd에 맞는 태그를 활용 할 수 있다.
# 스프링은 이 dispacher-servlet.xml에서 선언한 클래스들을 
객체로 컨테이너에서 로딩 후, 해당 객체들을 url 패턴으로 호출하여 처리한다.
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:util="http://www.springframework.org/schema/util"
	 xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
  		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
   		http://www.springframework.org/schema/websocket
		http://www.springframework.org/schema/websocket/spring-websocket.xsd" >
	<!-- 
	# container에서 객체 생성과 메서드 활용
	1. 객체 생성
		1) vo클래스를 선언, 패키지명.클래스명 복사.
		2) class="패키지명.클래스"
			컨테이너안에서 Person p01 = new Person();
	2. 기능 메서드의 활용
		1) property name = "set프로퍼티명" value="할당데이터"
			p01.setName("홍길동");
	 -->
	 <bean id="f01" class="a01_diexp.vo.Fruit">
	 	<property name="name" value="사과"/>
	 	<property name="price" value="2000"/>
	 	<property name="prodLoc" value="대구"/>
	 </bean>
	 <!-- 
	 ex) a01_diexp.vo 안에 Duck 클래스를 선언하고, 오리의 종류와 색상의 필드로
	 선언하여, DI로 호출하여 main에서 출력하세요
	  -->
	  <bean id="d01" class="a01)diexp.vo.Duck">
	  	<property name="kind" value="청둥오리"></property>
	  	<property name="color" value="회색"></property>
	  </bean>
</beans>