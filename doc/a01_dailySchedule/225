2022-02-25
# 전날 복습
[1단계:개념] 1. 답글을 처리할려고 한다. DB 처리 구조를 기술하세요.
	계층적 sql을 위해, 종속관계 컴럼 구조 설정..
	no : 글번호.
	refno : 해당글이 답글일 때, 상위 글번호
	no는 글등록시 sequence활용하여, 식별하는 primary key로 입력
	refno는 답글을 처리시, 기존 글의 no를 할당하여 처리..
	테이블 데이터
	no   refno  title
	1	  0     글등록
	2     1     RE:글등록   : 상위글 no를 기준으로 하위글 등록 처리

[1단계:개념] 2. 답글을 처리하는 화면 처리 구조와 속성 변경을 view단과 controller단을 구분하여 기술하세요
	1. 글등록 화면을 로딩할 때, ModelAttribute("모델명")을 통해, 요청값과 모델값을 처리하는 객체를 매개값으로
		받게 처리한다.
		controller(등록화면호출 controller)
		public String insertBoard(@ModelAttribute("board") Board board)
		view(등록화면)
		<input name="no" value="${board.no}"
		<input name="refno" value="${board.refno}"
	2. 상세화면에서 답글을 클릭시, 처리할 js
		$("#reBtn").click(function(){
			$("[name=refno]").val($("[name=no]").val());
			$("[name=title]").val("RE:"+$("[name=title]").val());
			$("[name=content]").val("\n\n\n====이전글====\n"+$("[name=content]").val());
			$("form").attr("action","${path}/board.do?method=insertFrm");
			// 컨트롤러의 변경 및 전송
			$("form").submit();
		});
[1단계:확인] 3. springweb 프로젝트에서 기본데이터가 있는 화면에서 답글 클릭시, 답글 등록화면 처리를 만들어 출력하세요.
               DB없이 입력된 내용 기준 : @@@ ==> RE:@@@, 내용 ==> \n\n\n이전내용,  no ==> refno 처리
[1단계:확인] 4. 계층적 sql의 주요 코드의 의미를 기술하고, board의 계층적 sql을 emp에서 empno와 mgr에 적용하여 
				처리하는 sql을 만드세요.
	start with 조건  : 최상위 계층의 조건 설정
	connect by prior 컬럼1 = 컬럼2  : 상하위 계층 구조에 있는 컬럼을 지정할당.
	order siblings by 정렬컬럼 desc : 계층 구조에서 역정렬이 필요할 시 처리할 내용
	select *
	from emp
	start with mgr = 0
	connect by	prior empno = mgr
	order siblings by empno desc;				

# 주요학습범위
1. 게시판의 답변형 데이터 처리
2. aws를 활용한 배포 처리
# 생각해봅시다.
1. 페이징 처리를 위해 화면에 처리값와 로직처리, DB 처리값을 구분할 수 있는가?
	핵심 속성값 : DB 최종 sql의 한페이지의 시작번호와 마지막번호를 가지고 오는 로직을 위해 필요
	총데이터건수 : (DB) dao를 통한 처리
	한번에 보여줄 데이터 건수 : 요청값 (select)
	총페이지수 : 총데이터건수/한번에보여줄데이터
	선택한 현재 페이지 : 요청값  click시 hidden으로 선택한 페이지 번호 요청값으로 전달
	시작번호/마지막 번호 : 한번에 보여줄 데이터 건수, 선택한 현재 페이지수.

2. 클라우드를 활용하기 위해 어떤 지식과 기술이 필요하는가?
	온라인상 공유 자원을 이용해서 운영체제를 만들어, 웹서버를 구축하고 데이터베이스나 소스를 로딩하여,
		웹 페이지를 구현 처리하는 것으로 아래와 같은 지시과 기술이 필요로 한다.
	클라우스 서비스 내용 
	운영체제에 대한 기본 지식
		- 접근 툴의 활용 : putty, 보안설정 key 처리
		- 리눅스운영 체제/윈도우 운영 체제 명령어 및 활용 방법
			파일 접근 방법
			프로그래밍 설치 방법(jdk, tomcat)
			환경변수 설정 방법 path 경로 등
			방화벽에 대한 설정
	웹서비스의 처리 방식에 대한 이해
		WAS서버기동
		프로젝트별로 소스 작성 - local, svn, git
		프로젝트단위 배포를 위한 파일 생성 .war
		WAS의 서버에 관리자 기능 접한 설정.
			- admin 권한 접근 처리
			- war파일 배포를 위한 권한 처리
		배포 및 결과 화면 확인

			
# 학습목표
1. 페이지 처리한 답변형 게시판의 비지니스 로직을 이해하고 활용할 수 있다.
2. ec2를 활용하여 만들어진 프로젝트를 서버에 올릴 수 있다.

 	
# 주요핵심 keyword

# 주요 진행계획(학습 단계별 체계화)
1. 학습지침 
	1) 전체 핵심 내용을 이해하고, 간단한 코드로 확인한다.
	2) 각 내용을 내용 계열화를 통해 연관되어 이해를 한다.
	3) 세부 내용을 기능 메서드의 기능을 확인하고 진행한다.
	4) 조원들과 내용에 대하여 이야기 하면서 진행한다.
	5) 수업 진행에 중점, 조별과제 진행
	
2. 발표 전날 내용 리뷰, 정리 과제 풀이
   조별 발표 진행
   발표 내용 조별 피드백
   14시 - 주간 요청 사항 및 개인 및 조별 진행 내용 점검
3. 16시 - 각 조별 피드백
4. 17시 - 조별과제 진행 회의, 질문사항

# 추후 일정
1. 서버 구축
	1) 클라우드 환경 서버 구축
		aws
		
2. 프런트 단 : vue
3. 스프링 수업
	- dynamic web project : 스프링 환경
	- 기타 실무 예제
		파일업로드/다운로드(완료)	
	    게시판(파일업로드, 답변, 페이징처리)
		ajax 처리 : fullcalendar(jquery lib)
		채팅
		다국어 처리
		aop
		배치프로그래밍
	- 스프링 boot(아래내용 선택)	
		vue 환경 게시판 예제 진행
# 요청사항 진행
1. 수업 속도 - 현재 속도 유지
	- 조별로 완료가 되지 않았더라도 지금 정도는 진행되어야 할 때, 손들기로 변경

# 조별과제 진행 점검
1.  진행 플로우 점검
	- 전체
	- 주단위
		전주(금) - 다음 주 진행할 일정계획 및 담당자 확인,
				  발표 feedback 사항 및 변경 및 개선사항 정리
				  진행에 필요한 내용 점검(조장/조원), 진행 계획 수립
		월 - 개선사항 적용 템플릿 점검(조별활동시간)
			text로 개선사항 내용과 함께 ppt의 페이지를 표기해서 전달 부탁드립니다.
		화 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
	    수 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
	    목 - 최종 발표 및 산출물(소스 및 진행 내용) 자료 제출
	    금 - 발표/발전사항 점검

# 평가/정리
- 다음 날 진행.

# 공지
28 월 - 자체 휴강
1  화 - 공휴일




