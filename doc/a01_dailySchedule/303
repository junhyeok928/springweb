2022-03-03
# 전날 복습
[1단계:개념] 1. 페이징 처리시, service 단의 BoardSch 속성 처리 순서를 기술하세요
	1) 전체 갯수 : count(DB)
	2) 한번에 보일 페이지 수 pageSize (화면요청)
	3) 총페이지 수 : count/pageSize (로직)
	4) 클릭한 현재 페이지 번호 : curPage (화면요청)
	5) 시작번호 : start (로직)
	6) 마지막번호 : end (로직)
	7) 페이지블럭크기 : blockSize(지정)
	8) 시작블럭 : startBlock(로직)	
	9) 마지막블럭 : endBlock(로직)	

[1단계:개념] 2. 위 내용을 화면요청값, DB, 로직으로 구분하여 기술하세요 
[1단계:개념] 3. 위 속성 중 초기값 처리가 필요한 속성과 이유를 기술하세요
	한번에 보일 페이지 수 pageSize  
    클릭한 현재 페이지 번호 :  curPage
    ==> 초기 화면 로딩시, 요청값이 없기 때문에 숫자형 데이터는 0으로 설정되기에
    	적절한 페이지 수와 번호를 초기로 설정하여야 한다. 
	페이지블럭크기 : blockSize(지정)
	==> 블럭 크기는 지정된 블럭 크기 설정이 필요..	

[1단계:개념] 4. 전체 페이지 갯수를 처리하는 로직을 기술하세요
	 총페이지 수 : count/pageSize (로직)
	 	전체데이터건수/한번에 보여줄 페이지크기.
	 	페이지 크기는 나머지 데이터를 올림해서 처리해야지 된다.
	 	Math.ceil() 활용 ex) 데이터건수가 16건이고, 한번에 보열 줄 페이지당 건수가 5건을 때,
	 		페이지를 총 4페이지가 필요로 하여 올림처리가 필요로 한다.
[1단계:개념] 5. 페이지당 시작번호와 마지막 번호를 처리하는 로직을 기술하세요
	마지막번호 : 한번에보여줄 페이지크기 * 현재 클릭한 페이지 번호
	시작번호 : (한번에보여줄 페이지크기-1) * 현재 클릭한 페이지 번호 + 1

[1단계:개념] 6. 하단에 페이지 블럭단위를 처리하는 로직을 순서별로 기술하세요 
	한번에 보여줄 페이지 블럭 크기를 지정(일반적으로 홀수 3, 5, 7, ...)
	현재 페이지 블럭번호 
	페이지 블럭 시작 번호
	페이지 블럭의 마지막 번호

~9:30 까지 제출해주세요.

# 주요학습범위
1. spring boot 활용

# 생각해봅시다.
1. 스프링 boot의  view단의 처리 방식이 어떤 것이 있는가?
	template를 활용하는 방법 : jsp, 타임리프, freemaker
	ajax를 통해 view단을 따로 분리 시켜 처리 하는 방법 :
		ajax + vue(html)
		
	웹서버 : html기반 프런트 프레임워크 활용(css, html, js) -vue, react, 앵귤러 - node 환경
	+ 
	웹어플리케이션 서버 : 스프링 부트	

2. 스프링 boot에서 ajax로 vue단과 어떻게 연동하여 처리하는가?
	스프링 boot는 
		backend 처리를 위해서 환경 구성 (view-json, RestController)
			RestController : 객체를 return하면 json 데이터 형태로 바로 변환을 하여 출력한다.
		호출하는 데이터를 요청값을 받아 DB 처리 결과를 json 형태로 리턴..
		Vue에서는 jquery ajax, axios(js lib)
		Vue에서 이벤트에 의해서 데이터를 호출하여 스프링 boot의 데이터를 가져와서 처리한다.		

3. 스프링 boot의 lib 처리 방식은 무엇인가?
	1) framework(@@.jar)에 대한 온라인상 로딩 방식은 여러가지 툴을 지원을 받아처리된다.
	2) maven : xml형식으로 배포 + lib 다운로드..
	3) gradle : text형식으로 lib 다운로드 및 배포 처리, maven 보다 bug가 많이 줄어 들었다.
		 

		
			
# 학습목표
1. 스프링 boot로 개발 환경을 만들 수 있다.
2. 스프링 boot의 템플릿을 이해하고 활용할 수 있다.
3. 스프링 boot의 DB 처리 방식을 이해하고 활용할 수 있다.

 	
# 주요핵심 keyword

# 주요 진행계획(학습 단계별 체계화)
1. 학습지침 
	1) 전체 핵심 내용을 이해하고, 간단한 코드로 확인한다.
	2) 각 내용을 내용 계열화를 통해 연관되어 이해를 한다.
	3) 세부 내용을 기능 메서드의 기능을 확인하고 진행한다.
	4) 조원들과 내용에 대하여 이야기 하면서 진행한다.
	5) 수업 진행에 중점, 조별과제 진행
	
2. 발표 전날 내용 리뷰, 정리 과제 풀이
3. 16시 - 각 조별 피드백
4. 17시 - 최종 발표 결과물 제출, 조별과제 진행 회의, 질문사항

# 추후 일정
1. 서버 구축
	1) 클라우드 환경 서버 구축
		aws
		세부사항 : 현재까지 진행한 내용으로는 과금 발생을 하지 않았기에
			개인적은 계정 등록하고, 진행할 수 있도록 준비해주세요..
		
2. 프런트 단 : vue
3. 스프링 수업
	- dynamic web project : 스프링 환경
	- 기타 실무 예제
		파일업로드/다운로드(완료)	
	    게시판(파일업로드, 답변, 페이징처리)
		ajax 처리 : fullcalendar(jquery lib)
		채팅
		다국어 처리
		aop
		배치프로그래밍
		aws 활용 실무 - 리눅스 환경, 기타 인스턴스 객체
	- 스프링 boot(아래내용 선택)	
		vue 환경 게시판 예제 진행
			- 1순위 emp리스트
			- 2순위 게시판
# 요청사항 진행
1. 수업 속도 - 현재 속도 유지
	- 조별로 완료가 되지 않았더라도 지금 정도는 진행되어야 할 때, 손들기로 변경

# 조별과제 진행 점검
1.  진행 플로우 점검
	- 전체
	- 주단위
		전주(금) - 다음 주 진행할 일정계획 및 담당자 확인,
				  발표 feedback 사항 및 변경 및 개선사항 정리
				  진행에 필요한 내용 점검(조장/조원), 진행 계획 수립
		월 - 개선사항 적용 템플릿 점검(조별활동시간)
			text로 개선사항 내용과 함께 ppt의 페이지를 표기해서 전달 부탁드립니다.
		화 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
	    수 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
	    목 - 최종 발표 및 산출물(소스 및 진행 내용) 자료 제출
	    금 - 발표/발전사항 점검
# 평가/정리
- 다음 날 진행.

# 공지
1. 이번주 금요일 4차 프로젝트 최종 발표
2. 최종 프로젝트 시작
	- 일정 계획
	- 주제 선정
	- 금요일 조별로 위 내용을 가지고 조별로 면담.
3. 프로젝트 기간, 수업 진행 범위 확인
	- 위 실무 예제 진도(스프링 관련)
	- aws 실무 활용(리눅스 명령어 등)
	- 기타 요청에 의한 진도 review 
		
	





